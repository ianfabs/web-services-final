{"id":"components/App.svelte","dependencies":[{"name":"Z:\\Q9\\Web Services\\FinalProject\\svelte.config.js","includedInParent":true,"mtime":1574127405641},{"name":"Z:\\Q9\\Web Services\\FinalProject\\package.json","includedInParent":true,"mtime":1574130124185},{"name":"svelte/internal","loc":{"line":21,"column":7},"parent":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\App.svelte","resolved":"Z:\\Q9\\Web Services\\FinalProject\\node_modules\\svelte\\internal\\index.mjs"},{"name":"./Manager.svelte","loc":{"line":23,"column":20},"parent":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\App.svelte","resolved":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\Manager.svelte"},{"name":"./Shade.svelte","loc":{"line":24,"column":18},"parent":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\App.svelte","resolved":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\Shade.svelte"},{"name":"_css_loader","parent":"Z:\\Q9\\Web Services\\FinalProject\\src\\components\\App.svelte","resolved":"Z:\\Q9\\Web Services\\FinalProject\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _internal = require(\"svelte/internal\");\n\nvar _Manager = _interopRequireDefault(require(\"./Manager.svelte\"));\n\nvar _Shade = _interopRequireDefault(require(\"./Shade.svelte\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* components/App.svelte generated by Svelte v3.15.0 */\nconst file = \"components/App.svelte\";\n\nfunction add_css() {\n  var style = (0, _internal.element)(\"style\");\n  style.id = \"svelte-2ralgw-style\";\n  style.textContent = \"h1.svelte-2ralgw{text-align:center}span.svelte-2ralgw{font-family:'Courier New', sans-serif;background:#F2F3F9;border-radius:5px;padding:8px 20px;box-shadow:inset 0px 0px 10px -5px #2E2E2E}\\n\";\n  (0, _internal.append_dev)(document.head, style);\n}\n\nfunction create_fragment(ctx) {\n  let h1;\n  let t0;\n  let i0;\n  let t1;\n  let t2;\n  let t3;\n  let span;\n  let t4;\n  let b;\n  let i1;\n  let t6;\n  let t7;\n  let br;\n  let t8;\n  let current;\n  const shade = new _Shade.default({\n    props: {\n      title: \"Get cat litter\",\n      body: \"The cats are out of litter.\"\n    },\n    $$inline: true\n  });\n  const block = {\n    c: function create() {\n      h1 = (0, _internal.element)(\"h1\");\n      t0 = (0, _internal.text)(\"Welcome to \");\n      i0 = (0, _internal.element)(\"i\");\n      t1 = (0, _internal.text)(ctx.name);\n      t2 = (0, _internal.text)(\"!\");\n      t3 = (0, _internal.space)();\n      span = (0, _internal.element)(\"span\");\n      t4 = (0, _internal.text)(\"With \");\n      b = (0, _internal.element)(\"b\");\n      i1 = (0, _internal.element)(\"i\");\n      i1.textContent = \"ToDone!\";\n      t6 = (0, _internal.text)(\" You'll be able to manage todos faster than you can think!\");\n      t7 = (0, _internal.space)();\n      br = (0, _internal.element)(\"br\");\n      t8 = (0, _internal.space)();\n      (0, _internal.create_component)(shade.$$.fragment);\n      (0, _internal.add_location)(i0, file, 20, 15, 1019);\n      (0, _internal.attr_dev)(h1, \"class\", \"svelte-2ralgw\");\n      (0, _internal.add_location)(h1, file, 20, 0, 1004);\n      (0, _internal.add_location)(i1, file, 22, 14, 1054);\n      (0, _internal.add_location)(b, file, 22, 11, 1051);\n      (0, _internal.attr_dev)(span, \"class\", \"svelte-2ralgw\");\n      (0, _internal.add_location)(span, file, 22, 0, 1040);\n      (0, _internal.add_location)(br, file, 23, 0, 1138);\n    },\n    l: function claim(nodes) {\n      throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, h1, anchor);\n      (0, _internal.append_dev)(h1, t0);\n      (0, _internal.append_dev)(h1, i0);\n      (0, _internal.append_dev)(i0, t1);\n      (0, _internal.append_dev)(h1, t2);\n      (0, _internal.insert_dev)(target, t3, anchor);\n      (0, _internal.insert_dev)(target, span, anchor);\n      (0, _internal.append_dev)(span, t4);\n      (0, _internal.append_dev)(span, b);\n      (0, _internal.append_dev)(b, i1);\n      (0, _internal.append_dev)(span, t6);\n      (0, _internal.insert_dev)(target, t7, anchor);\n      (0, _internal.insert_dev)(target, br, anchor);\n      (0, _internal.insert_dev)(target, t8, anchor);\n      (0, _internal.mount_component)(shade, target, anchor);\n      current = true;\n    },\n    p: function update(changed, ctx) {\n      if (!current || changed.name) (0, _internal.set_data_dev)(t1, ctx.name);\n    },\n    i: function intro(local) {\n      if (current) return;\n      (0, _internal.transition_in)(shade.$$.fragment, local);\n      current = true;\n    },\n    o: function outro(local) {\n      (0, _internal.transition_out)(shade.$$.fragment, local);\n      current = false;\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(h1);\n      if (detaching) (0, _internal.detach_dev)(t3);\n      if (detaching) (0, _internal.detach_dev)(span);\n      if (detaching) (0, _internal.detach_dev)(t7);\n      if (detaching) (0, _internal.detach_dev)(br);\n      if (detaching) (0, _internal.detach_dev)(t8);\n      (0, _internal.destroy_component)(shade, detaching);\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  let {\n    name\n  } = $$props;\n  const writable_props = [\"name\"];\n  Object.keys($$props).forEach(key => {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== \"$$\") console.warn(`<App> was created with unknown prop '${key}'`);\n  });\n\n  $$self.$set = $$props => {\n    if (\"name\" in $$props) $$invalidate(\"name\", name = $$props.name);\n  };\n\n  $$self.$capture_state = () => {\n    return {\n      name\n    };\n  };\n\n  $$self.$inject_state = $$props => {\n    if (\"name\" in $$props) $$invalidate(\"name\", name = $$props.name);\n  };\n\n  return {\n    name\n  };\n}\n\nclass App extends _internal.SvelteComponentDev {\n  constructor(options) {\n    super(options);\n    if (!document.getElementById(\"svelte-2ralgw-style\")) add_css();\n    (0, _internal.init)(this, options, instance, create_fragment, _internal.safe_not_equal, {\n      name: 0\n    });\n    (0, _internal.dispatch_dev)(\"SvelteRegisterComponent\", {\n      component: this,\n      tagName: \"App\",\n      options,\n      id: create_fragment.name\n    });\n    const {\n      ctx\n    } = this.$$;\n    const props = options.props || {};\n\n    if (ctx.name === undefined && !(\"name\" in props)) {\n      console.warn(\"<App> was created without expected prop 'name'\");\n    }\n  }\n\n  get name() {\n    throw new Error(\"<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'\");\n  }\n\n  set name(value) {\n    throw new Error(\"<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'\");\n  }\n\n}\n\nvar _default = App;\nexports.default = _default;","css":"h1.svelte-2ralgw{text-align:center}span.svelte-2ralgw{font-family:'Courier New', sans-serif;background:#F2F3F9;border-radius:5px;padding:8px 20px;box-shadow:inset 0px 0px 10px -5px #2E2E2E}"},"sourceMaps":{"js":{"mappings":[{"source":"App.svelte","name":null,"original":{"line":8,"column":2},"generated":{"line":16,"column":0}}],"sources":{"App.svelte":"<script>\n  import Manager from './Manager.svelte';\n  import Shade from './Shade.svelte';\n  export let name;\n</script>\n\n<style>\n  h1 {\n    text-align: center;\n  }\n  span {\n    font-family: 'Courier New', sans-serif;\n    background: #F2F3F9;\n    border-radius: 5px;\n    padding: 8px 20px;\n    box-shadow: inset 0px 0px 10px -5px #2E2E2E;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvQXBwLnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0VBQ0U7SUFDRSxrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLHNDQUFzQztJQUN0QyxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQiwyQ0FBMkM7RUFDN0MiLCJmaWxlIjoiY29tcG9uZW50cy9BcHAuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIGgxIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgc3BhbiB7XG4gICAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIHNhbnMtc2VyaWY7XG4gICAgYmFja2dyb3VuZDogI0YyRjNGOTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogOHB4IDIwcHg7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMHB4IDBweCAxMHB4IC01cHggIzJFMkUyRTtcbiAgfVxuIl19 */</style>\n\n<h1>Welcome to <i>{name}</i>!</h1>\n\n<span>With <b><i>ToDone!</i></b> You'll be able to manage todos faster than you can think!</span>\n<br/>\n<Shade\n  title={\"Get cat litter\"}\n  body={\"The cats are out of litter.\"}\n/>\n"},"lineCount":null}},"error":null,"hash":"3cd960306d97d718bd3f95b6692cfb4e","cacheData":{"env":{}}}